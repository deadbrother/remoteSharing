<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonc.epmwxwl.dao.rule.RuleTypeDao">
	<select id="findAllDrawType" parameterType="String" resultType="java.util.Map">
		select
		rowtypet_name "text" ,
		draw_type_id
		"id"
		from
		WXWL_DRAW_TYPE
		where tenant_id=#{tenant_id} and
		stutas = '0' order by sort_num asc
	</select>
	<select id="findAllResRuleType" resultType="java.util.Map">
		select
		res_type_name "text",
		res_type_id "id"
		from WXWL_RES_RULE_TYPE
		where stutas = '0'
		order by sort_num ASC
	</select>
	<select id="findDrawTypeById" parameterType="java.util.Map"
		resultType="com.bonc.epmwxwl.model.DrawType">
		select
		draw_type_id
		"draw_type_id",
		rowtypet_name "rowtype_name",
		resources_id
		"resources_id",
		resp_id "resp_id",
		resume "resume",
		stutas "stutas",
		sort_num "sort_num",
		tenant_id "tenant_id"
		from
		WXWL_DRAW_TYPE
		where draw_type_id=#{id}
		and tenant_id=#{tenant_id}
	</select>
	<select id="findRFTParIsNull" parameterType="java.util.Map"
		resultType="com.bonc.epmwxwl.model.ResFiledType">
		select
		rt.res_field_type_id "res_field_type_id",
		rt.res_id "res_id",
		rt.res_field_type_name "res_field_type_name",
		rt.parent_id "parent_id",
		rt.sort_num "sort_num",
		rt.tenant_id "tenant_id"
		from WXW_RES_FIELD_TYPE rt
		inner join WXWL_DRAW_TYPE dt on
		(rt.res_id=dt.resources_id or rt.res_id=dt.resp_id) and
		rt.tenant_id=dt.tenant_id and (rt.parent_id is null or rt.parent_id ='null' or
		rt.parent_id='NULL')
		where rt.tenant_id=#{tenant_id}
		and
		dt.draw_type_id=#{draw_type_id}
		order by
		rt.sort_num asc
	</select>
	<select id="findTAF" parameterType="java.util.Map"
		resultType="com.bonc.epmwxwl.model.ResFiledType">
		(select
		rt.res_field_type_id "res_field_type_id",
		rt.res_id "res_id",
		rt.res_field_type_name "res_field_type_name",
		rt.parent_id "parent_id",
		rt.sort_num "sort_num",
		null "filed_type",
		rt.tenant_id "tenant_id"
		from WXW_RES_FIELD_TYPE rt
		where
		rt.tenant_id=#{tenant_id}
		and rt.parent_id=#{res_field_type_id} and (rt.res_id in (select
		d.resources_id from WXWL_DRAW_TYPE d where d.draw_type_id=
		#{draw_type_id} ) or rt.res_id in (select d.resp_id from
		WXWL_DRAW_TYPE d where d.draw_type_id= #{draw_type_id} )))
		union all
		( select
		ef.field_id "res_field_type_id",
		rtl.ress_id "res_id",
		(case when rtl.field_desc is not null then rtl.field_desc else ef.field_name end)  "res_field_type_name",
		null "parent_id",
		rtl.sort_num "sort_num",
		ef.field_type "field_type",
		rtl.tenant_id "tenant_id"
		from WXWL_RES_FIELD_TYPE_REL rtl inner join
		WXWL_ENTITY_FIELD ef
		on rtl.field_id=ef.field_id and ef.tenant_id=rtl.tenant_id and
		ef.field_stutas='0'
		where (rtl.ress_id in (select d.RESOURCES_ID from WXWL_DRAW_TYPE d
		where d.draw_type_id= #{draw_type_id} ) or rtl.ress_id in (select d.resp_id from WXWL_DRAW_TYPE d
		where d.draw_type_id= #{draw_type_id} )) and rtl.tenant_id=#{tenant_id}
		and
		rtl.type_id=#{res_field_type_id})
	</select>
	<insert id="saveRuleSet" parameterType="com.bonc.epmwxwl.model.RuleType">
		insert into
		WXWL_RULE_TYPE
		(rule_type_id,
		rule_type_name,
		res_type_id,
		draw_type_id,
		condition_resume,
		condition_sql,
		stutas,
		sort_num,
		tenant_id
		)values (
		#{rule_type_id,jdbcType=VARCHAR},
		#{rule_type_name,jdbcType=VARCHAR},
		#{res_type_id,jdbcType=VARCHAR},
		#{draw_type_id,jdbcType=VARCHAR},
		#{condition_resume,jdbcType=VARCHAR},
		#{condition_sql,jdbcType=VARCHAR},
		#{stutas,jdbcType=VARCHAR},
		#{sort_num,jdbcType=INTEGER},
		#{tenant_id,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertRuleTypeArv" parameterType="com.bonc.epmwxwl.model.RuleTypeArv">
		insert into
		WXWL_RULE_TYPE_AVG
		(type_sort_id,
		rule_type_id,
		resources_field,
		resources_field_name,
		sort_num,
		tenant_id
		)values (
		#{type_sort_id,jdbcType=VARCHAR},
		#{rule_type_id,jdbcType=VARCHAR},
		#{resources_field,jdbcType=VARCHAR},
		#{resources_field_name,jdbcType=VARCHAR},
		#{sort_num,jdbcType=INTEGER},
		#{tenant_id,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertRuleTypeSort" parameterType="com.bonc.epmwxwl.model.RuleTypeSortModel">
		insert into
		WXWL_RULE_TYPE_SORT
		(type_sort_id,
		rule_type_id,
		res_field_name,
		res_field_id,
		resq_field_name,
		resq_field_id,
		sort_num,
		tenant_id)values(
		#{type_sort_id,jdbcType=VARCHAR},
		#{rule_type_id,jdbcType=VARCHAR},
		#{res_field_name,jdbcType=VARCHAR},
		#{res_field_id,jdbcType=VARCHAR},
		#{resq_field_name,jdbcType=VARCHAR},
		#{resq_field_id,jdbcType=VARCHAR},
		#{sort_num,jdbcType=INTEGER},
		#{tenant_id,jdbcType=VARCHAR}
		)
	</insert>
	<select id="findByRuleTypeId" parameterType="java.util.Map"
		resultType="com.bonc.epmwxwl.model.RuleType">
		select
		rule_type_id "rule_type_id",
		rule_type_name "rule_type_name",
		res_type_id "res_type_id",
		draw_type_id "draw_type_id",
		condition_resume "condition_resume",
		condition_sql "condition_sql",
		stutas "stutas",
		sort_num "sort_num",
		tenant_id "tenant_id"
		from WXWL_RULE_TYPE t
		where 1=1
		<if test="rule_type_id != null and rule_type_id != '' ">
			and t.rule_type_id=#{rule_type_id}
		</if>
		and
		t.tenant_id=#{tenant_id}
	</select>
	<select id="findArvByRuleTypeId" parameterType="java.util.Map"
		resultType="com.bonc.epmwxwl.model.ArvRows">
		select
		t.type_sort_id "type_sort_id",
		t.rule_type_id "rule_type_id",
		t.resources_field "arvfiledSql",
		t.resources_field_name "arvfiledName"
		from WXWL_RULE_TYPE_AVG t
		where
		t.rule_type_id=#{rule_type_id} and t.tenant_id=#{tenant_id}
		order by t.sort_num asc
	</select>
	<select id="findFirByRuleTypeId" parameterType="java.util.Map"
		resultType="com.bonc.epmwxwl.model.SortRows">
		select
		t.type_sort_id "type_sort_id",
		t.rule_type_id "rule_type_id",
		t.res_field_name "firresFiledName",
		t.res_field_id "firresFiledSql",
		t.resq_field_name "firDutyFiledName",
		t.resq_field_id "firDutyFiledSql"
		from WXWL_RULE_TYPE_SORT t
		where t.tenant_id=#{tenant_id} and t.rule_type_id=#{rule_type_id}
		order by t.sort_num asc
	</select>
	<update id="updateRuleSet" parameterType="com.bonc.epmwxwl.model.RuleType">
		update WXWL_RULE_TYPE
		set
		rule_type_id=#{rule_type_id,jdbcType=VARCHAR},
		rule_type_name=#{rule_type_name,jdbcType=VARCHAR},
		res_type_id=#{res_type_id,jdbcType=VARCHAR},
		draw_type_id=#{draw_type_id,jdbcType=VARCHAR},
		condition_resume=#{condition_resume,jdbcType=VARCHAR},
		condition_sql=#{condition_sql,jdbcType=VARCHAR},
		stutas=#{stutas,jdbcType=VARCHAR},
		sort_num=#{sort_num,jdbcType=INTEGER},
		tenant_id=#{tenant_id,jdbcType=VARCHAR}
		where
		rule_type_id=#{rule_type_id,jdbcType=VARCHAR}
	</update>
	<delete id="deleteFiledsTable" parameterType="java.util.Map">
		delete from ${TableName} where rule_type_id=#{rule_type_id} and
		tenant_id=#{tenant_id}
	</delete>
</mapper>